{"version":3,"sources":["components/side_bar.js","components/sign_in.js","App.js","reportWebVitals.js","index.js"],"names":["drawerWidth","makeStyles","theme","root","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","title","menuButton","marginRight","spacing","hide","display","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","useStyles","paper","marginTop","flexDirection","logo","margin","maxWidth","form","submit","SignIn","classes","Container","component","CssBaseline","className","src","alt","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","color","Button","Grid","container","item","xs","align","Link","href","createMuiTheme","palette","primary","main","grey","secondary","blue","responsiveFontSizes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c5f3cab.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport DesktopWindowsIcon from '@material-ui/icons/DesktopWindows';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n    title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n           <Typography variant=\"h6\" className={classes.title}>\n            {props.text_menu}\n          </Typography>\n             <Button variant=\"h6\" color=\"inherit\">{props.text_right}</Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['Inicio', 'Sesiones', 'Fisioterapeuta'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index === 0 ?<DesktopWindowsIcon color=\"secondary\"/ >\n              : index === 1 ? <AssignmentIcon color=\"secondary\"/> : <CommentIcon color=\"secondary\"/>}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Image from 'material-ui-image'\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  logo: {\n    margin: theme.spacing(1),\n    maxWidth: 160,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n           <img src=\"/logo.png\" alt=\"logo\" className={classes.logo} />\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Accept terms and conditions\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs >\n                <Typography variant=\"body2\" align=\"center\">\n                    <Link href=\"#\" variant=\"body2\" align=\"center\">\n                        Forgot password?\n                      </Link>\n                 </Typography>\n            </Grid>\n            <Grid item>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","import React from 'react';\nimport Drawer from './components/side_bar';\nimport { MuiThemeProvider, createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport Signin from './components/sign_in';\nimport blue from '@material-ui/core/colors/blue';\nimport grey from '@material-ui/core/colors/grey';\nimport Button from '@material-ui/core/Button';\n\n// use default theme\n// const theme = createMuiTheme();\n\n// Or Create your Own theme:\nvar theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[500],\n    },\n    secondary: {\n      main: blue[500],\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme)\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n    <div className=\"App\">\n        <Signin />\n    </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport { render } from 'react-snapshot'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}